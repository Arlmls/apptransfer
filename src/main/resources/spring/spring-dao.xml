<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
        
       <!--配置整合mybatis过程
       1.配置数据库相关参数--> 
       <context:property-placeholder location="classpath:jdbc.properties"/>
       <!--2.数据库连接池-->
       <bean id = "dataSource" class = "com.mchange.v2.c3p0.ComboPooledDataSource">
           <!-- 配置连接池属性 -->
           <property name="driverClass" value="${driver}"></property>
           <!-- url、user、pasword -->
           <property name="jdbcUrl" value="${url}"></property>
           <property name="user" value="${username}"></property>
           <property name="password" value="${password}"></property>
           <!-- c3p0私有属性 -->
           <property name="maxPoolSize" value = "30"></property> <!-- 默认15 -->
           <property name="minPoolSize" value="10"></property>
           <!-- 关闭连接后不自动commit -->
           <property name="autoCommitOnClose" value="false"></property>
           
           <!-- 获取连接超时时间 -->
           <property name="checkoutTimeout" value="1000"></property>
           <!-- 当获取连接失败重试次数 -->
           <property name="acquireRetryAttempts" value="2"></property>
       </bean>
       
       <!-- 约定大于配置 -->
       <!-- 3.配置SqlSessionFactory对象 -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
          <!-- 往下才是mybatis与spring真正整合的配置 -->
          <!-- 注入数据库连接池 -->
          <property name="dataSource" ref="dataSource"></property>
          <!-- 配置mybatis全局配置文件：mybatis-config.xml -->
          <property name="configLocation" value="classpath:mybatis-config.xml"></property>
          <!-- 扫描entity包，使用别名，多个用；隔开 -->
          <property name="typeAliasesPackage" value="transfer.entity"></property>
          <!-- 扫描sql配置文件：mapper需要的xml文件 -->
          <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
       </bean>
       
       <!-- 4.配置扫描Dao包接口，动态实现Dao接口，注入到spring容器 -->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
           <!-- 注入SqlSessionFactory -->
           <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
           <!-- 给出需要扫描的Dao接口 -->
           <property name="basePackage" value="transfer.dao"></property>
       </bean>
       
       <!-- RedisDao
       <bean id = "redisDao" class="transfer.cache.RedisDao">
           <constructor-arg index="0" value="localhost"/>
           <constructor-arg index="1" value="6379"/>
       </bean> -->
</beans>